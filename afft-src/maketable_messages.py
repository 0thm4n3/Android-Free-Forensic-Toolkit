#!/usr/bin/env python

import os, sys, getopt, time, apsw, re, report.makecss


def makehead(reportfile):
	reportfile.write("<html>\n")
	reportfile.write("<head>\n")
	reportfile.write("<style type='text/css'>\n")
	reportfile.write("   html, body {height: 100%; margin: 0}\n")
	reportfile.write("	#content {width: 100%; height: 100%}\n")
	reportfile.write("	#left {width: 150px; height: 100%; float: left;}\n")
	reportfile.write("	#right {margin-left: 170px; height: 100%;}\n")
	reportfile.write("</style>\n")
	reportfile.write("<link rel=\"stylesheet\" href=\"report.css\" type=\"text/css\"/>\n")
	reportfile.write("<h1><div align=center> AFFT Report - Facebook - Messages </div></h1>\n")				   ###Change Me
	reportfiledate = time.strftime("%d/%m/%Y")
	reportfiletime = time.strftime("%H:%M:%S")
	reportfile.write("   <p>Report compiled on " + reportfiledate + " at " + reportfiletime + " </p>\n")
	reportfile.write("   <p>Generated by Android Free Forensic Toolkit. &copy; Conor Rynne</p>\n")
	reportfile.write("</head>\n")
	reportfile.write("<body>\n")
	reportfile.write("<div id='content'>\n")
	reportfile.write("<br /><br />")
	reportfile.write("  <div id='left' class=\"SideBar\">\n")
	reportfile.write("	  <table>\n")
	reportfile.write("<TR><TD>Reports</TD></TR>")
	
def importnavbar(reportfile, case):
	navbarlocation = os.path.join(case, "reports", "navlist")
	navbar = open(navbarlocation, 'r')
	reportfile.write(navbar.read())
	
	
	
def makemid(reportfile):
	reportfile.write("   </table>\n")
	reportfile.write("   </div>\n")
	reportfile.write("   <div id='right'>\n")

	

def maketable(reportfile, case):
	reportfiledb = os.path.join(case, "extracted data", "facebook", "db", "threads_db2")
	reportfile_connection=apsw.Connection(reportfiledb)
	reportfile_cursor1=reportfile_connection.cursor()
	reportfile_cursor2=reportfile_connection.cursor()
	
	reportfile.write("<table CELLPADDING=8 CELLSPACING=0 VALIGN=TOP>\n")
	reportfile.write("<tr><td><a href=reportfile-contacts.html>Contacts</a></td></tr>\n")
	reportfile.write("</table>\n")
	reportfile.write("<div class=\"ResultsTable\">\n")
	reportfile.write("<table>\n")
	reportfile.write("<tr><td><b>Conversation</b></td><td><b>Message</b></td><td><b>Sent By</b></td><td><b>Attachments</b></td><td><b>Coordinates</b></td><td><b>Time</b></td></tr>\n")

	for row1 in reportfile_cursor1.execute("select msg_id from messages order by timestamp_ms DESC"):
		for entry1 in row1:
			reportfile.write("<TR>\n")
			for row2 in reportfile_cursor2.execute("select thread_key from messages WHERE msg_id = '" + str(entry1) + "'"):
			
				for entry2 in row2:
						reportfile.write("<TD>" + entry2 + "</TD>\n")
			
				for row2 in reportfile_cursor2.execute("select text from messages WHERE msg_id = '" + str(entry1) + "'"):
					for entry2 in row2:
						reportfile.write("<TD>" + str(entry2) + "</TD>\n")
			
				for row2 in reportfile_cursor2.execute("select sender from messages WHERE msg_id = '" + str(entry1) + "'"):
					for entry2 in row2:
						reportfile.write("<TD>" + str(entry2) + "</TD>\n")
					
				for row2 in reportfile_cursor2.execute("select attachments from messages WHERE msg_id = '" + str(entry1) + "'"):
					for entry2 in row2:
						if str(entry2) == '[]':
							entry_str2 = 'None'
						else:
							attachmentre = re.compile(r"(filename\":\".*?\")")
							attachresults = attachmentre.findall(entry2)
							attresults_tmp1 = str(attachresults)
							attresults_tmp2 = attresults_tmp1.replace('[\'filename":"',"")
							entry_str2 = attresults_tmp2.replace('"\']','')
						reportfile.write("<TD>" + entry_str2 + "</TD>\n")
					
				for row2 in reportfile_cursor2.execute("select coordinates from messages WHERE msg_id = '" + str(entry1) + "'"):
					for entry2 in row2:
						accre = re.compile(r'(:.*)')
						latre = re.compile(r'(.*?,)')
						lonre = re.compile(r'(,.*?:)')
						try:	
							latresults = latre.findall(entry2)
							latresults_tmp = str(latresults)
							latresults_tmp2= latresults_tmp.replace("['","")
							latresults_tmp2 = latresults_tmp2.replace("{\"latitude\":","")
							latresults_tmp3 = latresults_tmp2.replace(",']","")
							print(latresults)
							latresults_tmp4 = float(latresults_tmp3)
							latresults_tmp5 = "%0.4f" % latresults_tmp4
							latresults_str = str(latresults_tmp5)
						except TypeError:
							latresults_str = 'None'
						
						
						try:	
							lonresults = lonre.findall(entry2)
							lonresults_tmp = str(lonresults)
							lonresults_tmp2= lonresults_tmp.replace("[',","")
							lonresults_tmp3 = lonresults_tmp2.replace(":']","")
							lonresults_tmp4 = float(lonresults_tmp3)
							lonresults_tmp5 = "%0.4f" % lonresults_tmp4
							lonresults_str = str(lonresults_tmp5)
						
						except Exception:
							lonresults_str = 'None'
						
							
						try: 
							accresults = accre.findall(entry2)
							accresults_strtmp1 = str(accresults)
							accresults_strtmp2 = accresults_strtmp1.replace("[':","")
							accresults_strtmp3 = accresults_strtmp2.replace("']","")
							accresults_strtmp4 = float(accresults_strtmp3)
							accresults_strtmp5 = "%0.2f" % accresults_strtmp4
							accresults_str = str(accresults_strtmp5)
						except Exception:
							accresults_str = "Error"
						if not latresults_str == "None":
							reportfile.write("<TD><a href=\"https://www.google.com/maps/preview/@" + latresults_tmp3 + "," + lonresults_tmp3 + ",13z\">" + latresults_str + "," + lonresults_str + " to the accuracy of " + accresults_str + " meters</a></TD>\n")
						else:
							reportfile.write("<TD>None</TD>")
						
				for row2 in reportfile_cursor2.execute("select datetime(timestamp_ms/1000,'unixepoch','localtime') as timestamp_ms from messages WHERE msg_id = '" + str(entry1) + "'"):
					for entry2 in row2:
						reportfile.write("<TD>" + str(entry2) + "</TD>\n")
					
			reportfile.write("</TR>\n")
	reportfile.write("</table>\n")
	reportfile.write("</div>\n")

def makereport(case):
	
	csslocation = os.path.join(case, "reports", "facebook", "report.css")
	reportfilelocation = os.path.join(case, "reports", "facebook", "report.html")
	reportfile = open(reportfilelocation, 'w')
	css = open(csslocation, 'w')
	report.makecss.makecss(css)
	css.close()
	makehead(reportfile)
	importnavbar(reportfile, case)
	makemid(reportfile)
	maketable(reportfile, case)
	
	
	reportfile.close()

	
	


